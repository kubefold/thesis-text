@startuml
' Global appearance
skinparam rectangle {
  BackgroundColor #ffffff
  BorderColor black
}
skinparam shadowing false
skinparam dpi 300

' Set overall layout to vertical
top to bottom direction

rectangle "CLUSTER" {
  ' Ensure the cluster itself stacks its children vertically
  top to bottom direction

  rectangle "CONTROL PLANE" {
    ' Control plane components stacked vertically
    top to bottom direction

    rectangle "cloud-controller-manager" as CCM #00BFFF
    rectangle "kube-api-server" as API #1E90FF
    rectangle "etcd" as ETCD #1E90FF
    rectangle "scheduler\n(kube-scheduler)" as SCHED #1E90FF
    rectangle "controller manager\n(kube-controller-manager)" as CTRL #1E90FF
  }

  rectangle "Node 1" {
    ' Node 1 components stacked vertically
    top to bottom direction

    rectangle "kubelet" as KLET1 #1E90FF
    rectangle "kube-proxy" as KPROXY1 #00BFFF
    rectangle "pods (Node 1)" {
      top to bottom direction

      rectangle "pod" as POD1_1 #1E90FF
      rectangle "pod" as POD1_2 #1E90FF
      rectangle "pod" as POD1_3 #1E90FF
    }
  }

  rectangle "Node 2" {
    ' Node 2 components stacked vertically
    top to bottom direction

    rectangle "kubelet" as KLET2 #1E90FF
    rectangle "kube-proxy" as KPROXY2 #00BFFF
    rectangle "pods (Node 2)" {
      top to bottom direction

      rectangle "pod" as POD2_1 #1E90FF
    }
  }
}

' Draw arrows *after* to maintain visual structure
CCM --> API
API -l-> ETCD
ETCD --> API
SCHED --> API
CTRL --> API

API -d-> KLET1
API -d-> KLET2

KLET1 --> POD1_1
KLET1 --> POD1_2
KLET1 --> POD1_3

KLET2 --> POD2_1
@enduml