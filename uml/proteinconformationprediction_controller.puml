@startuml

skinparam dpi 300

actor User as user
participant "API\nServer" as api
participant Operator as operator
participant "Alignment\npod" as alignmentPod
participant "Prediction\npod" as predictionPod
participant "Post\nprocessing\npod" as postProcessingPod
database "Protein\nDatabase\nVolume" as dbVolume
database "Ephemeral\nVolume" as tmpVolume
database "AWS\nS3" as s3
queue "AWS\nSNS" as sns

user -> api : Creates\n//Protein//\n//Conformation//\n//Prediction//\nresource
api -> operator : Resource\nis\nbeing\nfetched
operator -> tmpVolume : Set up\nvolume
group "Alignment Phase"
operator -> alignmentPod : Schedule\njob
alignmentPod -> dbVolume : Scan protein databases
alignmentPod -> alignmentPod : Perform\nMSA search\nand alignment
alignmentPod -> tmpVolume : Write alignment\ntemporal state
operator -> alignmentPod : Detect\njob finish
operator -> api : Update\nphase\nstatus
end
group "Prediction Phase"
operator -> predictionPod : Schedule prediction job
predictionPod -> tmpVolume : Load\nalignment\nartifacts
predictionPod -> predictionPod : Compute\nprotein\nstructure
predictionPod -> tmpVolume : Write Machine Learning\nprocessing output
operator -> predictionPod : Detect\njob finish
operator -> api : Update\nphase\nstatus
end
group "Post Processing Phase"
operator -> postProcessingPod : Schedule post processing job
postProcessingPod -> tmpVolume : Read prediction artifacts
postProcessingPod -> s3 : Upload prediction artifacts
postProcessingPod -> sns : Send notifications
operator -> postProcessingPod : Detect\njob finish
operator -> api : Update\nphase\nstatus
end
user -> api : Monitor\ntask status

@enduml